/* This file was generated by SableCC (http://www.sablecc.org/). */

package smile.node;

import smile.analysis.*;

@SuppressWarnings("nls")
public final class ANextindexStmt extends PStmt
{
    private TNextindex _nextindex_;

    public ANextindexStmt()
    {
        // Constructor
    }

    public ANextindexStmt(
        @SuppressWarnings("hiding") TNextindex _nextindex_)
    {
        // Constructor
        setNextindex(_nextindex_);

    }

    @Override
    public Object clone()
    {
        return new ANextindexStmt(
            cloneNode(this._nextindex_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANextindexStmt(this);
    }

    public TNextindex getNextindex()
    {
        return this._nextindex_;
    }

    public void setNextindex(TNextindex node)
    {
        if(this._nextindex_ != null)
        {
            this._nextindex_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nextindex_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._nextindex_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._nextindex_ == child)
        {
            this._nextindex_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._nextindex_ == oldChild)
        {
            setNextindex((TNextindex) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
