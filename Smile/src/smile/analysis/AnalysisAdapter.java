/* This file was generated by SableCC (http://www.sablecc.org/). */

package smile.analysis;

import java.util.*;
import smile.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAStmtlist(AStmtlist node)
    {
        defaultCase(node);
    }

    public void caseAEmptyStmtlist(AEmptyStmtlist node)
    {
        defaultCase(node);
    }

    public void caseANextindexStmt(ANextindexStmt node)
    {
        defaultCase(node);
    }

    public void caseAPrevindexStmt(APrevindexStmt node)
    {
        defaultCase(node);
    }

    public void caseAIncStmt(AIncStmt node)
    {
        defaultCase(node);
    }

    public void caseADecStmt(ADecStmt node)
    {
        defaultCase(node);
    }

    public void caseAPrintStmt(APrintStmt node)
    {
        defaultCase(node);
    }

    public void caseAPrintcharStmt(APrintcharStmt node)
    {
        defaultCase(node);
    }

    public void caseAWhileStmt(AWhileStmt node)
    {
        defaultCase(node);
    }

    public void caseAIfStmt(AIfStmt node)
    {
        defaultCase(node);
    }

    public void caseTNextindex(TNextindex node)
    {
        defaultCase(node);
    }

    public void caseTPrevindex(TPrevindex node)
    {
        defaultCase(node);
    }

    public void caseTInc(TInc node)
    {
        defaultCase(node);
    }

    public void caseTDec(TDec node)
    {
        defaultCase(node);
    }

    public void caseTWhileint(TWhileint node)
    {
        defaultCase(node);
    }

    public void caseTWhileend(TWhileend node)
    {
        defaultCase(node);
    }

    public void caseTPrint(TPrint node)
    {
        defaultCase(node);
    }

    public void caseTPrintchar(TPrintchar node)
    {
        defaultCase(node);
    }

    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    public void caseTEndif(TEndif node)
    {
        defaultCase(node);
    }

    public void caseTNewLine(TNewLine node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
