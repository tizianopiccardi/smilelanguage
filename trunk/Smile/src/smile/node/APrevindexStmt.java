/* This file was generated by SableCC (http://www.sablecc.org/). */

package smile.node;

import smile.analysis.*;

@SuppressWarnings("nls")
public final class APrevindexStmt extends PStmt
{
    private TPrevindex _previndex_;

    public APrevindexStmt()
    {
        // Constructor
    }

    public APrevindexStmt(
        @SuppressWarnings("hiding") TPrevindex _previndex_)
    {
        // Constructor
        setPrevindex(_previndex_);

    }

    @Override
    public Object clone()
    {
        return new APrevindexStmt(
            cloneNode(this._previndex_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPrevindexStmt(this);
    }

    public TPrevindex getPrevindex()
    {
        return this._previndex_;
    }

    public void setPrevindex(TPrevindex node)
    {
        if(this._previndex_ != null)
        {
            this._previndex_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._previndex_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._previndex_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._previndex_ == child)
        {
            this._previndex_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._previndex_ == oldChild)
        {
            setPrevindex((TPrevindex) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
